
#include "betris_gamestate.h"

#ifndef __BETRIS_CONTROL__
#define __BETRIS_CONTROL__

/* 
 * Block transformations for clockwise rotations. 
 * Indexed [Color][Rotation][BlockIdx].
 * Inverse can be applied for counter-clockwise rotations. 
 */
const betris_coord_t BETRIS_TETROMINO_ROTATE[8][4][4] = {

    // Blank
    {{{0, 0}, {0, 0}, {0, 0}, {0, 0}},
    {{0, 0}, {0, 0}, {0, 0}, {0, 0}},
    {{0, 0}, {0, 0}, {0, 0}, {0, 0}},
    {{0, 0}, {0, 0}, {0, 0}, {0, 0}}},

    // Red (Z) 
    {{{0, 2}, {-1, 1}, {0, 0}, {-1, -1}},
    {{-2, 0}, {-1, -1}, {0, 0}, {1, -1}},
    {{0, -2}, {1, -1}, {0, 0}, {1, 1}},
    {{-2, 0}, {1, 1}, {0, 0}, {-1, 1}}},

    // Orange (L)
    {{{1, 1}, {0, 0}, {-1, -1}, {-2, 0}},
    {{-1, 1}, {0, 0}, {1, -1}, {0, -2}},
    {{-1, -1}, {0, 0}, {1, 1}, {2, 0}},
    {{1, -1}, {0, 0}, {-1, 1}, {0, 2}}},

    // Yellow (O)
    {{{0, 0}, {0, 0}, {0, 0}, {0, 0}},
    {{0, 0}, {0, 0}, {0, 0}, {0, 0}},
    {{0, 0}, {0, 0}, {0, 0}, {0, 0}},
    {{0, 0}, {0, 0}, {0, 0}, {0, 0}}},

    // Green (S)
    {{{1, 1}, {0, 0}, {-1, 1}, {-2, 0}},
    {{-1, 1}, {0, 0}, {-1, -1}, {0, -2}},
    {{-1, -1}, {0, 0}, {1, -1}, {2, 0}},
    {{1, -1}, {0, 0}, {1, 1}, {0, 2}}},

    // Cyan (I)
    {{{1, 2}, {0, 1}, {-1, 0}, {-2, -1}},
    {{-2, 1}, {-1, 0}, {0, -1}, {1, -2}},
    {{-1, -2}, {0, -1}, {1, 0}, {2, 1}},
    {{2, -1}, {1, 0}, {0, 1}, {-1, 2}}},

    // Blue (J)
    {{{0, 2}, {1, 1}, {0, 0}, {-1, -1}},
    {{-2, 0}, {-1, 1}, {0, 0}, {1, -1}},
    {{0, -2}, {-1, -1}, {0, 0}, {1, 1}},
    {{2, 0}, {1, -1}, {0, 0}, {-1, 1}}},

    // Purple (T)
    {{{1, 1}, {0, 0}, {-1, 1}, {-1, -1}},
    {{-1, 1}, {0, 0}, {-1, -1}, {1, -1}},
    {{-1, -1}, {0, 0}, {1, -1}, {1, 1}},
    {{1, -1}, {0, 0}, {1, 1}, {-1, 1}}},
};

#endif